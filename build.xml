<?xml version="1.0" encoding="UTF-8"?>

<project name="refine-sample-extension" default="build" basedir=".">

    <property environment="env"/>

    <condition property="version" value="trunk">
        <not><isset property="version"/></not>
    </condition>

    <condition property="revision" value="rXXXX">
        <not><isset property="revision"/></not>
    </condition>

    <condition property="full_version" value="0.0.0.0">
        <not><isset property="full_version"/></not>
    </condition>

    <condition property="dist.dir" value="dist">
        <not><isset property="dist.dir"/></not>
    </condition>

	<property name="java_version" value="1.6" />
	
    <property name="fullname" value="${name}-${version}-${revision}" />
    
    <property name="refine.dir" value="${basedir}/../../main" />
    <property name="refine.webinf.dir" value="${refine.dir}/webapp/WEB-INF" />
    <property name="refine.modinf.dir" value="${refine.dir}/webapp/modules/core/MOD-INF" />
    <property name="refine.classes.dir" value="${refine.webinf.dir}/classes" />
    <property name="refine.lib.dir" value="${refine.webinf.dir}/lib" />
    <property name="server.dir" value="${basedir}/../../server" />
    <property name="server.lib.dir" value="${server.dir}/lib" />
    
    <property name="src.dir" value="${basedir}/src" />
     <property name="test.dir" value="${basedir}/test" />
    <property name="module.dir" value="${basedir}/module" />
    <property name="modinf.dir" value="${module.dir}/MOD-INF" />
    <property name="lib.dir" value="${modinf.dir}/lib" />
    <property name="classes.dir" value="${modinf.dir}/classes" />

    <path id="class.path">
        <fileset dir="${lib.dir}" erroronmissingdir="true">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${refine.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${server.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement path="${refine.classes.dir}"/>
    </path>

    <java classname="jena.schemagen">
        <classpath refid="class.path" />
        <arg line="-i ${basedir}/resources/vocabularies/qprob/qprob.trig -e N3 --inference --package
            com.google.refine.quality.vocabularies -o src/ -n QPROB" />
    </java>

    <target name="build_java">
        <echo message="${basedir}/resources/vocabularies/qprob/qprob.trig"/>
        <mkdir dir="${classes.dir}" />
        <javac source="${java_version}" target="${java_version}" encoding="utf-8"
            destdir="${classes.dir}" debug="true" includeAntRuntime="no">
            <src path="${src.dir}"/>
            <classpath refid="class.path" />
        </javac>
           <javac source="${java_version}" target="${java_version}" encoding="utf-8"
                destdir="${classes.dir}" debug="true" includeAntRuntime="no">
            <src path="${test.dir}"/>
            <classpath refid="class.path" />
        </javac>
    </target>
    
     <target name="test" depends="build_java">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath refid="class.path" /> <classpath>
                <pathelement location="${classes.dir}" />
            </classpath>

            <batchtest fork="yes">
                  <formatter type="brief" usefile="false"/>
                <fileset dir="${test.dir}">
                    <include name="**/*Test*.java" />
                </fileset>
            </batchtest>
        </junit>
  </target>

    <target name="build" depends="build_java"/>

    <target name="clean">
        <delete dir="${classes.dir}" />
    </target>
	
	<!--+  TODO create zip.
	 #target name="install" depends="build_java">
	        <move file="${release.targetDir}/${release.name}" todir="${rm.plugins}" overwrite="true" />
	    </target>
	   +-->
</project>


